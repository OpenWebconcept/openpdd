// Bootstrap
@import '~bootstrap/scss/variables';
@import '~bootstrap/scss/mixins';

/**
* Standard button
*/
@mixin button {
	padding: $btn-padding-y $btn-padding-x;
	border-width: $btn-border-width;
	border-style: $btn-border-style;
	border-color: currentColor;
	border-radius: $btn-border-radius;
	font-family: $btn-font-family;
	font-size: $btn-font-size;
	font-weight: $btn-font-weight;
	line-height: $btn-line-height;
	transition: $btn-transition;

	@include hover-focus-active {
		text-decoration: none;
	}
}

@mixin button-color(
	$background,
	$hover-background: darken( $background, 7% )
) {
	border-color: $background;
	background-color: $background;
	color: color-yiq( $background );

	@include hover-focus-active {
		border-color: $hover-background !important;
		background-color: $hover-background !important; // Overwrite Gutenberg inline style
		color: color-yiq( $hover-background );
	}
}

/**
* Outline button
*/
@mixin button-variant-outline( $color ) {
	border-width: $btn-outline-border-width;
	border-style: $btn-outline-border-style;
	border-color: $color;
	background-color: $btn-outline-border-background;
	color: $color;

	@include hover-focus-active {
		background-color: $color;
		color: $white;
	}
}

/**
* FontAwesome mixin
* Usage: @include fontawesome("\f061");
*/
@mixin fontawesome( $icon ) {
	content: $icon;
	/* stylelint-disable */
	font-family: 'Font Awesome 6 Pro';
}

/**
* IE10+
*/
@mixin internet-explorer() {
	@media screen and ( -ms-high-contrast: active ),
		( -ms-high-contrast: none ) {
		@content;
	}
}

/**
* Used for custom checkbox and radiobutton
*/
@mixin custom-input-icon( $unchecked, $checked ) {
	position: relative;
	appearance: none;
	border: 0;
	display: inline;

	&:focus {
		outline: 0;
		& + label {
			font-weight: $font-weight-bold;
		}
	}

	&::before {
		@include fontawesome( $unchecked );
		position: absolute;
		top: 2px;
		left: 4px;
		color: $g-color;
		font-weight: $font-weight-light;
	}

	&:checked {
		&::before {
			@include fontawesome( $checked );
			font-weight: $font-weight-bold;
			color: $g-color-checked;
		}
	}

	@include internet-explorer() {
		display: inline-block;
	}
}

@mixin all-focusable-elements {
	input[type='radio']:focus + label,
	input[type='checkbox']:focus + label,
	input:focus:not( [type='radio'] ):not( [type='checkbox'] ),
	textarea:focus,
	a:focus,
	button:focus,
	select:focus,
	area:focus,
	iframe:focus,
	details:focus {
		@content;
	}
}

// Enables blocks to adhere to the Gutenberg alignment options.
@mixin add-gutenberg-alignment-layouts {
	max-width: calc( 100% - #{$grid-gutter-width} );
	margin-right: auto;
	margin-left: auto;

	@include media-breakpoint-up( sm ) {
		max-width: map-get( $container-max-widths, 'sm' );
	}

	@include media-breakpoint-up( md ) {
		max-width: map-get( $container-max-widths, 'md' );
	}

	@include media-breakpoint-up( xl ) {
		max-width: var( --layout-content-size );
	}

	// Equals the Bootstrap containers
	&.alignwide {
		@include media-breakpoint-up( lg ) {
			max-width: map-get( $container-max-widths, 'lg' );
		}

		@include media-breakpoint-up( xl ) {
			max-width: map-get( $container-max-widths, 'xl' );
		}
	}

	&.alignfull {
		max-width: 100%;
	}

	&.alignleft {
		@include create-float-alignment( left, right );
	}

	&.alignright {
		@include create-float-alignment( right, left );
	}
}

// Create the appropriate CSS for floating images. See
// https://github.com/WordPress/gutenberg/issues/33385#issuecomment-893551418
@mixin create-float-alignment( $direction, $opposite-direction ) {
	@include media-breakpoint-up( sm ) {
		float: #{$direction}; // Only float starting from sm breakpoint
		margin-#{$opposite-direction}: 1rem;
	}

	@include media-breakpoint-up( sm ) {
		margin-#{$direction}: calc(
			( 100% - map-get( $container-max-widths, 'sm' ) ) * 0.5
		) !important;
	}

	@include media-breakpoint-up( md ) {
		margin-#{$direction}: calc(
			( 100% - #{map-get( $container-max-widths, 'md' )} ) * 0.5
		) !important;
	}

	@include media-breakpoint-up( xl ) {
		margin-#{$direction}: calc(
			( 100% - var( --layout-content-size ) ) * 0.5
		) !important;
	}
}
